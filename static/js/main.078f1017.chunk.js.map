{"version":3,"sources":["components/Navbar/MenuItems.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItems","id","title","url","class","Navbar","state","clicked","handleClick","setState","className","onClick","this","map","navItem","href","React","Component","App","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPACaA,G,MAAY,CACrB,CACIC,GAAI,IACJC,MAAO,OACPC,IAAK,IACLC,MAAO,WAEX,CACIH,GAAI,IACJC,MAAO,SACPC,IAAK,IACLC,MAAO,WAEX,CACIH,GAAI,IACJC,MAAO,aACPC,IAAK,IACLC,MAAO,a,OCiBAC,E,4MA7BXC,MAAQ,CAAEC,SAAS,G,EAGnBC,YAAc,WACV,EAAKC,SAAS,CAAEF,SAAU,EAAKD,MAAMC,W,4CAGzC,WACI,OACI,sBAAKG,UAAU,WAAf,UACI,oBAAIA,UAAU,UAAd,wBACA,qBAAKA,UAAU,UAAUC,QAAWC,KAAKJ,YAAzC,SAEI,mBAAGE,UAAcE,KAAKN,MAAMC,QAAU,eAAiB,cAAvD,iBAGJ,oBAAIG,UAAYE,KAAKN,MAAMC,QAAU,iBAAmB,UAAxD,SAEKP,EAAUa,KAAI,SAACC,GACZ,OACI,mCAAwB,oBAAGJ,UAAYI,EAAQV,MAAQW,KAAOD,EAAQX,IAA9C,cAAuDW,EAAQZ,MAA/D,QAAxB,MAAUY,EAAQb,gB,GAtBzBe,IAAMC,WCYZC,MAbf,WACE,OAEE,sBAAKR,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,4CACA,qBAAKA,UAAU,eAAeS,IAAI,oBAAoBC,IAAI,iBAC1D,gDCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.078f1017.chunk.js","sourcesContent":["// We use these constants in order to easily change and utilize the navbar items\r\nexport const MenuItems = [\r\n    {\r\n        id: '1',\r\n        title: 'Home', // title of the item\r\n        url: '#', // where the item leads to\r\n        class: 'navLink' // class the item uses\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'Resume', \r\n        url: '#', \r\n        class: 'navLink'\r\n    },\r\n    {\r\n        id: '3',\r\n        title: 'Contact Me',\r\n        url: '#', \r\n        class: 'navLink'\r\n    },\r\n]","import React from 'react';\r\nimport './Navbar.css';\r\nimport { MenuItems } from \"./MenuItems\";\r\n\r\nclass Navbar extends React.Component {\r\n    /* state to check if the hamburger menu was clicked or not */\r\n    state = { clicked: false }\r\n    \r\n    /* Reference handleclick from div with navIcon class to turn clicked state to opposite of current value if icon is clicked */\r\n    handleClick = () => {\r\n        this.setState({ clicked: !this.state.clicked });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <nav className=\"navItems\">\r\n                <h1 className=\"navLogo\"> Eric Cen </h1>\r\n                <div className=\"navIcon\" onClick= { this.handleClick }>\r\n                    {/* Ternary operator: if icon is clicked, menu opens and we replace with X icon. if not clicked, it stays as hamburger menu icon */}\r\n                    <i className = { this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}> </i>\r\n                </div>\r\n                {/* Depending on clicked state, either show normal menu styling or mobile styling */}\r\n                <ul className={ this.state.clicked ? 'navMenu active' : 'navMenu'}>\r\n                     {/* Map the MenuItems so we can individually use each object in the const with navItem */}\r\n                    {MenuItems.map((navItem) => {\r\n                        return (\r\n                            <li key={ navItem.id }> <a className={ navItem.class } href={ navItem.url }> { navItem.title }  </a> </li> \r\n                        )\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import './App.css';\nimport Navbar from './components/Navbar/Navbar.js';\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <Navbar />\n      \n      <h1> Welcome! </h1>\n      <img className=\"profileimage\" src=\"/profileimage.jpg\" alt=\"profileimage\" />\n      <h2> Eric Cen </h2>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}